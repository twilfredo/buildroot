From 2af7c26b7a62140aaefae5b2b800f6721e0948b3 Mon Sep 17 00:00:00 2001
From: Niklas Cassel <cassel@kernel.org>
Date: Thu, 17 Apr 2025 14:12:11 +0200
Subject: [PATCH 5/9] PCI: dw-rockchip: Disable L1ss in EP mode

Disable L1 substates in EP mode.

I can run the pci_endpoint_test selftest successfully with ASPM enabled
with L0s and L1.

However, if we have the L1 substates (L1.1 and L1.2) enabled in the EP,
so ASPM can go to these states as well, all the tests in pci_endpoint_test
fail.

I have not tried to debug this any further.

Signed-off-by: Niklas Cassel <cassel@kernel.org>
---
 drivers/pci/controller/dwc/pcie-dw-rockchip.c | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/drivers/pci/controller/dwc/pcie-dw-rockchip.c b/drivers/pci/controller/dwc/pcie-dw-rockchip.c
index 7790a9f33e48..beafb54a50c8 100644
--- a/drivers/pci/controller/dwc/pcie-dw-rockchip.c
+++ b/drivers/pci/controller/dwc/pcie-dw-rockchip.c
@@ -278,12 +278,27 @@ static void rockchip_pcie_ep_hide_broken_ats_cap_rk3588(struct dw_pcie_ep *ep)
 		dev_err(dev, "failed to hide ATS capability\n");
 }
 
+static void rockchip_pcie_disable_l1ss_rk3588(struct dw_pcie_ep *ep)
+{
+	struct dw_pcie *pci = to_dw_pcie_from_ep(ep);
+	struct device *dev = pci->dev;
+
+	/* Only hide the L1SS capability for RK3588 running in EP mode. */
+	if (!of_device_is_compatible(dev->of_node, "rockchip,rk3588-pcie-ep"))
+		return;
+
+	if (dw_pcie_ep_hide_ext_capability(pci, PCI_EXT_CAP_ID_LTR,
+					   PCI_EXT_CAP_ID_L1SS))
+		dev_err(dev, "failed to hide L1SS capability\n");
+}
+
 static void rockchip_pcie_ep_init(struct dw_pcie_ep *ep)
 {
 	struct dw_pcie *pci = to_dw_pcie_from_ep(ep);
 	enum pci_barno bar;
 
 	rockchip_pcie_enable_l0s(pci);
+	rockchip_pcie_disable_l1ss_rk3588(ep);
 	rockchip_pcie_ep_hide_broken_ats_cap_rk3588(ep);
 
 	for (bar = 0; bar < PCI_STD_NUM_BARS; bar++)
-- 
2.49.0

